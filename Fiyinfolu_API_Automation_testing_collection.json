{
	"info": {
		"_postman_id": "508337fb-1e46-4821-ae3d-e390f7c61900",
		"name": "Fiyinfolu API Automation testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Get All Todo Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ae130bd-aa20-4f10-87f4-6ab9337ae076",
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"pm.environment.get(\"variable_key\");\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{project test}}todo",
							"host": [
								"{{project test}}todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6725a509-4599-4729-956a-fefdffed1065",
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"pm.environment.get(\"variable_key\");\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{project test}}",
							"host": [
								"{{project test}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get entry per ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6e216fd-0a26-43b2-95a7-8f195e201619",
								"exec": [
									"pm.test(\"status code is 200\", function () {\r",
									"pm.environment.get(\"variable_key\");\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{project test}}todo/?todo_id=2",
							"host": [
								"{{project test}}todo"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "todo_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create new Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "162748c9-ffe0-42d8-b27b-19f83799bf4c",
								"exec": [
									"\r",
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"content\":\"my first blog post :)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{project test}}todo",
							"host": [
								"{{project test}}todo"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete a todo per ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5bcc575-32ee-4ec6-92ee-3e79e5fac4ad",
								"exec": [
									"\r",
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Internal Server Error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{project test}}todo?todo_id=2",
							"host": [
								"{{project test}}todo"
							],
							"query": [
								{
									"key": "todo_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}